service: sudoku-getpuzzle-lambda
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: java8
  lambdaHashingVersion: 20201221

# you can overwrite defaults here
  stage: dev
  region: us-west-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
      Resource: "arn:aws:dynamodb:us-west-1:*:table/sudoku_puzzles"
    - Effect: "Allow"
      Action:
        - "dynamodb:Scan"
      Resource: "arn:aws:dynamodb:us-west-1:*:table/sudoku_puzzles"
    - Effect: "Allow"
      Action:
        - "dynamodb:Query"
      Resource: "arn:aws:dynamodb:us-west-1:*:table/sudoku_puzzles/index/PuzzleByDifficultyIndex"
    
    
# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  artifact: target/get-sudoku-lambda-dev.jar

plugins:
  - serverless-api-gateway-throttling
  
functions:
#  get-puzzle-httpapi:
#    handler: kh.sudoku.getpuzzlelambda.GetPuzzleHandler
#    events:
#      - httpApi:
#          path: /sudoku/httpapi/puzzle
#          method: get
#          cors: true
  get-puzzle-restapi:
    handler: kh.sudoku.getpuzzlelambda.GetPuzzleHandler
    events:
      - http:
          path: /sudoku/restapi/puzzle
          method: get
          cors: true
          throttling:
            maxRequestsPerSecond: 4
            maxConcurrentRequests: 2
